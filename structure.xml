<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a3" title="Opauth">
  <file path="Opauth.php" hash="c06ef208ed8965447e108b4090cdd738" package="Opauth">
    <docblock line="2">
      <description><![CDATA[Opauth
Multi-provider authentication framework for PHP]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright Â© 2012 U-Zyn Chua (http://uzyn.com)"/>
      <tag line="2" name="link" description="http://opauth.org" link="http://opauth.org"/>
      <tag line="2" name="package" description="Opauth"/>
      <tag line="2" name="license" description="MIT License"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="18" package="Opauth">
      <name>Opauth</name>
      <full_name>\Opauth</full_name>
      <extends/>
      <docblock line="12">
        <description><![CDATA[Opauth
Multi-provider authentication framework for PHP]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="12" name="package" description="Opauth"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="24" package="Default">
        <name>$config</name>
        <default><![CDATA[]]></default>
        <docblock line="19">
          <description><![CDATA[User configuraable settings
Refer to example/opauth.conf.php.default or example/opauth.conf.php.advanced for sample
More info: https://github.com/uzyn/opauth/wiki/Opauth-configuration]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="29" package="Default">
        <name>$env</name>
        <default><![CDATA[]]></default>
        <docblock line="26">
          <description><![CDATA[Environment variables]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="34" package="Default">
        <name>$strategyMap</name>
        <default><![CDATA[]]></default>
        <docblock line="31">
          <description><![CDATA[Strategy map: for mapping URL-friendly name to Class name]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="43" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="36">
          <description><![CDATA[Constructor
Loads user configuration and strategies.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="param" description="User configuration" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="Whether Opauth should auto run after initialization." type="boolean" variable="$run">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$config</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$run</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="95" package="">
        <name>run</name>
        <type>function</type>
        <docblock line="91">
          <description><![CDATA[Run Opauth:
Parses request URI and perform defined authentication actions based based on it.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="127" package="">
        <name>parseUri</name>
        <type>function</type>
        <docblock line="124">
          <description><![CDATA[Parses Request URI]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="143" package="">
        <name>loadStrategies</name>
        <type>function</type>
        <docblock line="140">
          <description><![CDATA[Load strategies from user-input $config]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="182" package="">
        <name>validate</name>
        <type>function</type>
        <docblock line="172">
          <description><![CDATA[Validate $auth response
Accepts either function call or HTTP-based call]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="param" description="= sha1(print_r($auth, true))" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="= $_REQUEST['timestamp'])" type="string" variable="$timestamp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="= $_REQUEST['signature']" type="string" variable="$signature">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="Sets reason for failure if validation fails" type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="return" description="true: valid; false: not valid." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$input</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$timestamp</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$signature</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$reason</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="212" package="">
        <name>callback</name>
        <type>function</type>
        <docblock line="207">
          <description><![CDATA[Callback: prints out $auth values, and acts as a guide on Opauth security
Application should redirect callback URL to application-side.]]></description>
          <long-description><![CDATA[Refer to example/callback.php on how to handle auth callback.]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="270" package="">
        <name>requireStrategy</name>
        <type>function</type>
        <docblock line="263">
          <description><![CDATA[Loads a strategy, firstly check if the strategy's class already exists, especially for users of Composer;
If it isn't, attempts to load it from $this->env['strategy_dir']]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="263" name="param" description="Name of a strategy" type="string" variable="$strategy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="return" description="Class name of the strategy, usually StrategyStrategy" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="270">
          <name>$strategy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="297" package="">
        <name>debug</name>
        <type>function</type>
        <docblock line="291">
          <description><![CDATA[Prints out variable with <pre> tags
Silence if Opauth is not in debug mode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="291" name="param" description="Object or variable to be printed" type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="297">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="OpauthStrategy.php" hash="48843b907bd5d513f97c9ca4cc4585f5" package="Opauth\Strategy">
    <docblock line="2">
      <description><![CDATA[Opauth Strategy
Individual strategies are to be extended from this class]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright Â© 2012 U-Zyn Chua (http://uzyn.com)"/>
      <tag line="2" name="link" description="http://opauth.org" link="http://opauth.org"/>
      <tag line="2" name="package" description="Opauth.Strategy"/>
      <tag line="2" name="license" description="MIT License"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="18" package="Opauth\Strategy">
      <name>OpauthStrategy</name>
      <full_name>\OpauthStrategy</full_name>
      <extends/>
      <docblock line="12">
        <description><![CDATA[Opauth Strategy
Individual strategies are to be extended from this class]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="12" name="package" description="Opauth.Strategy"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="24" package="Default">
        <name>$expects</name>
        <default><![CDATA[]]></default>
        <docblock line="20">
          <description><![CDATA[Compulsory config keys, listed as unassociative arrays
eg. array('app_id', 'app_secret');]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="30" package="Default">
        <name>$defaults</name>
        <default><![CDATA[]]></default>
        <docblock line="26">
          <description><![CDATA[Optional config keys with respective default values, listed as associative arrays
eg. array('scope' => 'email');]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="35" package="Default">
        <name>$auth</name>
        <default><![CDATA[]]></default>
        <docblock line="32">
          <description><![CDATA[Auth response array, containing results after successful authentication]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" package="Default">
        <name>$name</name>
        <default><![CDATA[null]]></default>
        <docblock line="37">
          <description><![CDATA[Name of strategy]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$strategy</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[Configurations and settings unique to a particular strategy]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$env</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[Safe env values from Opauth, with critical parameters stripped out]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="58" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="52">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="param" description="Strategy-specific configuration" type="array" variable="$strategy">
            <type by_reference="false">array</type>
          </tag>
          <tag line="52" name="param" description="Safe env values from Opauth, with critical parameters stripped out" type="array" variable="$env">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$strategy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="58">
          <name>$env</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="">
        <name>request</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Auth request
aka Log in or Register]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="110" package="">
        <name>callback</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Packs $auth nicely and send to callback_url, ships $auth either via GET, POST or session.]]></description>
          <long-description><![CDATA[Set shipping transport via callback_transport config, default being session.]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="141" package="">
        <name>errorCallback</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[Error callback]]></description>
          <long-description><![CDATA[More info: https://github.com/uzyn/opauth/wiki/Auth-response#wiki-error-response]]></long-description>
          <tag line="127" name="param" description="Data on error to be sent back along with the callback $error = array( 'provider' // Provider name 'code' // Error code, can be int (HTTP status) or string (eg. access_denied) 'message' // User-friendly error message 'raw' // Actual detail on the error, as returned by the provider )" type="array" variable="$error">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$error</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="166" package="">
        <name>shipToCallback</name>
        <type>function</type>
        <docblock line="155">
          <description><![CDATA[Send $data to callback_url using specified transport method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="param" description="Data to be sent" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="155" name="param" description="Callback method, either 'get', 'post' or 'session' 'session': Default. Works best unless callback_url is on a different domain than Opauth 'post': Works cross-domain, but relies on availability of client-side JavaScript. 'get': Works cross-domain, but may be limited or corrupted by browser URL length limit (eg. IE8/IE9 has 2083-char limit)" type="string" variable="$transport">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="166">
          <name>$transport</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="190" package="">
        <name>callAction</name>
        <type>function</type>
        <docblock line="184">
          <description><![CDATA[Call an action from a defined strategy]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="184" name="param" description="Action name to call" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="If an action is not defined in a strategy, calls $defaultAction" type="string" variable="$defaultAction">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$action</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$defaultAction</name>
          <default><![CDATA['request']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="202" package="">
        <name>expects</name>
        <type>function</type>
        <docblock line="195">
          <description><![CDATA[Ensures that a compulsory value is set, throws an error if it's not set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="param" description="Expected configuration key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="param" description="If value is set as $not, trigger E_USER_ERROR" type="string" variable="$not">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="The loaded value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="202">
          <name>$not</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="224" package="">
        <name>optional</name>
        <type>function</type>
        <docblock line="217">
          <description><![CDATA[Loads a default value into $strategy if the associated key is not found]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="param" description="Configuration key to be loaded" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="Default value for the configuration key if none is set by the user" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="return" description="The loaded value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$default</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="239" package="">
        <name>sign</name>
        <type>function</type>
        <docblock line="233">
          <description><![CDATA[Security: Sign $auth before redirecting to callback_url]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="233" name="param" description="ISO 8601 formatted date" type="string" variable="$timestamp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="Resulting signature" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="239">
          <name>$timestamp</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="265" package="">
        <name>hash</name>
        <type>function</type>
        <docblock line="256">
          <description><![CDATA[Static hashing funciton]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="param" description="Input string" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="param" description="ISO 8601 formatted date *" type="string" variable="$timestamp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="param" description="Number of hash interations" type="int" variable="$iteration">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="param" description="" type="string" variable="$salt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="return" description="Resulting hash" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="265">
          <name>$input</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="265">
          <name>$timestamp</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="265">
          <name>$iteration</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="265">
          <name>$salt</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="279" package="">
        <name>redirect</name>
        <type>function</type>
        <docblock line="273">
          <description><![CDATA[Redirect to $url with HTTP header (Location: )]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="273" name="param" description="URL to redirect user to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="273" name="param" description="Whether to call exit() right after redirection" type="boolean" variable="$exit">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="279">
          <name>$exit</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="290" package="">
        <name>clientPost</name>
        <type>function</type>
        <docblock line="284">
          <description><![CDATA[Generates a simple HTML form with $data initialized and post results via JavaScript]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="284" name="param" description="URL to be POSTed" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="284" name="param" description="Data to be POSTed" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="290">
          <name>$data</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="315" package="">
        <name>serverGet</name>
        <type>function</type>
        <docblock line="306">
          <description><![CDATA[Basic server-side HTTP GET request via self::httpRequest(), wrapper of file_get_contents]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="306" name="param" description="Destination URL" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="param" description="Data to be submitted via GET" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="306" name="param" description="Additional stream context options, if any" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="306" name="param" description="Response headers after HTTP call. Useful for error debugging." type="string" variable="$responseHeaders">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="return" description="Content resulted from request, without headers" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$responseHeaders</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="328" package="">
        <name>serverPost</name>
        <type>function</type>
        <docblock line="319">
          <description><![CDATA[Basic server-side HTTP POST request via self::httpRequest(), wrapper of file_get_contents]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="319" name="param" description="Destination URL" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="param" description="Data to be POSTed" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="319" name="param" description="Additional stream context options, if any" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="319" name="param" description="Response headers after HTTP call. Useful for error debugging." type="string" variable="$responseHeaders">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="Content resulted from request, without headers" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$responseHeaders</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="359" package="">
        <name>httpRequest</name>
        <type>function</type>
        <docblock line="344">
          <description><![CDATA[Simple server-side HTTP request with file_get_contents
Provides basic HTTP calls.]]></description>
          <long-description><![CDATA[See serverGet() and serverPost() for wrapper functions of httpRequest()

Notes:
Reluctant to use any more advanced transport like cURL for the time being to not
    having to set cURL as being a requirement.
Strategy is to provide own HTTP transport handler if requiring more advanced support.]]></long-description>
          <tag line="344" name="param" description="Full URL to load" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="344" name="param" description="Stream context options (http://php.net/stream-context-create)" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="344" name="param" description="Response headers after HTTP call. Useful for error debugging." type="string" variable="$responseHeaders">
            <type by_reference="false">string</type>
          </tag>
          <tag line="344" name="return" description="Content resulted from request, without headers" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="359">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="359">
          <name>$responseHeaders</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="378" package="">
        <name>recursiveGetObjectVars</name>
        <type>function</type>
        <docblock line="371">
          <description><![CDATA[Recursively converts object into array
Basically get_object_vars, but recursive.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="371" name="param" description="Object" type="mixed" variable="$obj">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="371" name="return" description="Array of object properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="378">
          <name>$obj</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="401" package="">
        <name>flattenArray</name>
        <type>function</type>
        <docblock line="392">
          <description><![CDATA[Recursively converts multidimensional array into POST-friendly single dimensional array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="392" name="param" description="Array to be flatten" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="392" name="param" description="String to be prefixed to flatenned variable name" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="392" name="param" description="Existing array of flattened inputs to be merged upon" type="array" variable="$results">
            <type by_reference="false">array</type>
          </tag>
          <tag line="392" name="return" description="A single dimensional array with POST-friendly name" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="401">
          <name>$prefix</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="401">
          <name>$results</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="425" package="">
        <name>envReplace</name>
        <type>function</type>
        <docblock line="418">
          <description><![CDATA[Replace defined env values enclused in {} with values from $dictionary]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="418" name="param" description="Input string" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="418" name="param" description="Dictionary to lookup values from" type="array" variable="$dictionary">
            <type by_reference="false">array</type>
          </tag>
          <tag line="418" name="return" description="String substitued with value from dictionary, if applicable" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="425">
          <name>$dictionary</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <package name="" full_name=""/>
  <package name="Default" full_name="Default"/>
  <package name="Opauth" full_name="Opauth">
    <package name="Strategy" full_name="Opauth\Strategy"/>
  </package>
  <namespace name="default" full_name="default"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
